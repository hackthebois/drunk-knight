import { useQuery } from '@tanstack/react-query';
import type { NextPage } from 'next';
import Head from 'next/head';
import Link from 'next/link';
import Cards from '../components/Cards';
import { env } from '../env/client.mjs';
import { CardSchema } from '../types/Card';
import { FaUserCircle } from 'react-icons/fa';
import { useUser } from '../hooks/user';

const play = async () => {
	const accessToken = localStorage.getItem('access_token');
	const res = await fetch(`${env.NEXT_PUBLIC_SERVER_URL}/play`, {
		method: 'GET',
		headers: {
			Accept: 'application/json',
			'Content-Type': 'application/json',
			Authorization: `${
				accessToken && accessToken !== '' ? `Bearer ${accessToken}` : ''
			}`,
		},
	});
	const data: unknown = await res.json();
	return await CardSchema.array().min(1).parse(data);
};

const Home: NextPage = () => {
	const { data: cards } = useQuery(['play'], play);
	const { data: user } = useUser();

	return (
		<>
			<Head>
				<title>Drunk Knight</title>
				<meta name="description" content="Generated by create-t3-app" />
				<link rel="icon" href="/favicon.ico" />
			</Head>

			<main className="w-[100vw] h-[100vh] p-8 flex flex-col items-center justify-center">
				{cards && <Cards cards={cards} />}
				{!user ? (
					<div className="text-white absolute bottom-8">
						Your are playing as guest.{' '}
						<Link href="/auth/signin">
							<a className=" text-blue-400">Sign in</a>
						</Link>{' '}
						or{' '}
						<Link href="/auth/signup">
							<a className=" text-blue-400">Sign up</a>
						</Link>
					</div>
				) : (
					<Link href="/account">
						<a>
							<FaUserCircle className="h-8 w-8 absolute right-8 top-8 cursor-pointer" />
						</a>
					</Link>
				)}
			</main>
		</>
	);
};

export default Home;
